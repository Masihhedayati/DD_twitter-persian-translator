# Development Dockerfile with ngrok support
FROM python:3.9-slim

# Set working directory
WORKDIR /app

# Install system dependencies including ngrok
RUN apt-get update && apt-get install -y \
    gcc \
    curl \
    wget \
    unzip \
    && rm -rf /var/lib/apt/lists/*

# Install ngrok
RUN curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null && \
    echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | tee /etc/apt/sources.list.d/ngrok.list && \
    apt-get update && apt-get install ngrok && \
    rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Install development dependencies
RUN pip install --no-cache-dir watchdog flask-reload

# Create necessary directories
RUN mkdir -p logs media data dev_data

# Set environment variables for development
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV FLASK_ENV=development
ENV FLASK_DEBUG=1

# Expose ports
EXPOSE 5001 4040

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:5001/health || exit 1

# Copy startup script
COPY scripts/docker-dev-start.sh /app/docker-dev-start.sh
RUN chmod +x /app/docker-dev-start.sh

# Run the development startup script
CMD ["/app/docker-dev-start.sh"] 