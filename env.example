# Twitter Monitor - Environment Variables Configuration
# Copy this file to .env and fill in your actual credentials

# ===========================================
# REQUIRED API CREDENTIALS
# ===========================================

# Twitter API (TwitterAPI.io)
# Get your API key from: https://twitterapi.io/
TWITTER_API_KEY=your_twitterapi_io_key_here

# OpenAI API Configuration
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_MODEL=gpt-3.5-turbo
OPENAI_MAX_TOKENS=150
OPENAI_TEMPERATURE=0.7

# Telegram Bot Configuration
# Get bot token from @BotFather on Telegram
# Get chat ID by messaging your bot and checking https://api.telegram.org/bot<token>/getUpdates
TELEGRAM_BOT_TOKEN=your_telegram_bot_token_here
TELEGRAM_CHAT_ID=your_telegram_chat_id_here

# ===========================================
# MONITORING CONFIGURATION
# ===========================================

# Twitter Users to Monitor (comma-separated, no spaces)
MONITORED_USERS=elonmusk,naval,paulg

# Polling Settings
CHECK_INTERVAL=60                    # Seconds between checks
MAX_TWEETS_PER_USER=20              # Maximum tweets to fetch per user per check

# ===========================================
# AI PROCESSING CONFIGURATION
# ===========================================

# AI Processing Settings
AI_ENABLED=true
AI_BATCH_SIZE=5                     # Number of tweets to process in parallel
AI_PROCESSING_INTERVAL=120          # Seconds between AI processing runs
AI_PROMPT_TEMPLATE=default          # Options: default, detailed, summary

# ===========================================
# NOTIFICATION CONFIGURATION
# ===========================================

# Notification Settings
NOTIFICATION_ENABLED=true
NOTIFY_ALL_TWEETS=false             # Set to true to notify for all tweets
NOTIFY_AI_PROCESSED_ONLY=true       # Only notify for AI-processed tweets
NOTIFICATION_DELAY=10               # Seconds to wait before sending notifications

# ===========================================
# SYSTEM CONFIGURATION
# ===========================================

# Application Settings
PORT=5001                           # Port for the web interface
DEBUG=false                         # Set to true for development
LOG_LEVEL=INFO                      # Options: DEBUG, INFO, WARNING, ERROR

# Database Configuration
DATABASE_PATH=./tweets.db           # Path to SQLite database file
DATABASE_BACKUP_ENABLED=true       # Enable automatic database backups
DATABASE_BACKUP_INTERVAL=24        # Hours between backups

# Media Storage Configuration
MEDIA_STORAGE_PATH=./media          # Path to store downloaded media files
MEDIA_DOWNLOAD_ENABLED=true        # Enable media file downloads
MEDIA_MAX_SIZE_MB=100              # Maximum size per media file (MB)
MEDIA_RETENTION_DAYS=90            # Days to keep media files

# ===========================================
# PERFORMANCE CONFIGURATION
# ===========================================

# Performance Settings
ENABLE_CACHING=true                 # Enable response caching
CACHE_TTL=300                       # Cache time-to-live in seconds
MAX_CONCURRENT_DOWNLOADS=3          # Maximum concurrent media downloads
REQUEST_TIMEOUT=30                  # API request timeout in seconds

# Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS_PER_MINUTE=100
RATE_LIMIT_BURST_SIZE=20

# ===========================================
# LOGGING CONFIGURATION
# ===========================================

# Logging Settings
LOG_TO_FILE=true
LOG_FILE_PATH=./logs/app.log
LOG_MAX_SIZE_MB=10                  # Maximum log file size
LOG_BACKUP_COUNT=5                  # Number of backup log files to keep
LOG_ROTATION_ENABLED=true

# ===========================================
# SECURITY CONFIGURATION
# ===========================================

# Security Settings
SECRET_KEY=your_secret_key_for_sessions_here
CORS_ENABLED=true
CORS_ORIGINS=*                      # Comma-separated origins for production

# ===========================================
# ADVANCED CONFIGURATION
# ===========================================

# Twitter API Advanced Settings
TWITTER_API_TIMEOUT=15              # Timeout for Twitter API requests
TWITTER_RETRY_ATTEMPTS=3            # Number of retry attempts for failed requests
TWITTER_RETRY_DELAY=5               # Seconds to wait between retries

# OpenAI Advanced Settings
OPENAI_TIMEOUT=30                   # Timeout for OpenAI API requests
OPENAI_RETRY_ATTEMPTS=3             # Number of retry attempts
OPENAI_RETRY_DELAY=2                # Seconds to wait between retries

# Telegram Advanced Settings
TELEGRAM_TIMEOUT=10                 # Timeout for Telegram API requests
TELEGRAM_RETRY_ATTEMPTS=3           # Number of retry attempts
TELEGRAM_PARSE_MODE=HTML            # Message formatting: HTML or Markdown

# Database Advanced Settings
DATABASE_POOL_SIZE=10               # Connection pool size
DATABASE_TIMEOUT=30                 # Database operation timeout
DATABASE_WAL_MODE=true              # Enable Write-Ahead Logging for better performance

# Health Monitoring
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_INTERVAL=300           # Seconds between health checks
HEALTH_CHECK_TIMEOUT=10             # Timeout for health check operations

# ===========================================
# DEVELOPMENT/TESTING CONFIGURATION
# ===========================================

# Development Settings (only for development/testing)
# Leave these empty for production
DEV_MODE=false
MOCK_TWITTER_API=false              # Use mock Twitter responses
MOCK_OPENAI_API=false               # Use mock OpenAI responses
MOCK_TELEGRAM_API=false             # Use mock Telegram responses
TEST_MODE=false                     # Enable test mode features

# ===========================================
# DOCKER CONFIGURATION
# ===========================================

# Docker-specific settings (when using Docker deployment)
DOCKER_MODE=false
CONTAINER_TIMEZONE=UTC
CONTAINER_USER_ID=1000
CONTAINER_GROUP_ID=1000

# ===========================================
# BACKUP AND MAINTENANCE
# ===========================================

# Maintenance Settings
AUTO_CLEANUP_ENABLED=true          # Enable automatic cleanup of old data
CLEANUP_INTERVAL_HOURS=24          # Hours between cleanup runs
CLEANUP_OLD_TWEETS_DAYS=30         # Delete tweets older than X days (0 = disabled)
CLEANUP_OLD_MEDIA_DAYS=90          # Delete media files older than X days
CLEANUP_OLD_LOGS_DAYS=7            # Delete log files older than X days

# ===========================================
# MONITORING AND ALERTS
# ===========================================

# External Monitoring (optional)
WEBHOOK_URL=                        # Webhook URL for system alerts
WEBHOOK_ENABLED=false               # Enable webhook notifications
WEBHOOK_EVENTS=error,health         # Comma-separated events to send

# Metrics Collection (optional)
METRICS_ENABLED=false               # Enable metrics collection
METRICS_ENDPOINT=                   # External metrics endpoint URL

# ===========================================
# CUSTOMIZATION
# ===========================================

# Custom Settings
CUSTOM_BRANDING=Twitter Monitor     # Application name/branding
CUSTOM_FOOTER=                      # Custom footer text
TIMEZONE=UTC                        # Timezone for timestamps

# Custom AI Prompts (optional)
CUSTOM_AI_PROMPT=                   # Custom prompt for AI analysis
AI_INCLUDE_SENTIMENT=true          # Include sentiment analysis
AI_INCLUDE_TOPICS=true             # Include topic extraction
AI_INCLUDE_SUMMARY=true            # Include content summary

# ===========================================
# NOTES FOR SETUP
# ===========================================

# IMPORTANT: 
# 1. Never commit this file with real credentials to version control
# 2. Make sure to set appropriate file permissions (chmod 600 .env)
# 3. For production, consider using a proper secrets management system
# 4. Test your configuration with: python -c "from core.config_manager import ConfigManager; ConfigManager()"

# CREDENTIAL SETUP INSTRUCTIONS:
# 1. TwitterAPI.io: Sign up at https://twitterapi.io/ and get your API key
# 2. OpenAI: Create account at https://platform.openai.com/ and generate API key
# 3. Telegram: 
#    - Message @BotFather on Telegram
#    - Create new bot with /newbot command
#    - Copy the bot token
#    - Add bot to your chat/channel and get chat ID

# TESTING YOUR SETUP:
# After configuration, test with:
# curl http://localhost:5001/health
# curl http://localhost:5001/api/status 