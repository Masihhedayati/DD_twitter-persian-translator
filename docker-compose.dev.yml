version: '3.8'

services:
  twitter-monitor-dev:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    container_name: twitter-monitor-dev
    ports:
      - "5001:5001"
      - "4040:4040"  # ngrok web interface
    environment:
      - TWITTER_API_KEY=${TWITTER_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=o1-mini
      - OPENAI_MAX_TOKENS=1000
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - TWITTER_WEBHOOK_SECRET=${TWITTER_WEBHOOK_SECRET}
      - MONITORED_USERS=${MONITORED_USERS:-elonmusk,naval,paulg}
      - CHECK_INTERVAL=${CHECK_INTERVAL:-60}
      - PORT=5001
      - DEBUG=true
      - LOG_LEVEL=DEBUG
      - WEBHOOK_ONLY_MODE=false
      - HYBRID_MODE=true
      - HISTORICAL_HOURS=2
      - DATABASE_PATH=/app/dev_tweets.db
      - DEV_MODE=true
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    volumes:
      - .:/app  # Mount source code for hot reload
      - ./dev_data:/app/dev_data
      - ./logs:/app/logs
      - ./media:/app/media
      - ./dev_tweets.db:/app/dev_tweets.db
    restart: unless-stopped
    networks:
      - dev-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Redis for development (if needed for caching)
  redis-dev:
    image: redis:7-alpine
    container_name: twitter-monitor-redis-dev
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    volumes:
      - redis_dev_data:/data
    restart: unless-stopped
    networks:
      - dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  dev-network:
    driver: bridge

volumes:
  redis_dev_data: 